import telebot
from datetime import datetime
from config import token, choose, events_soon, admin_chat_id
from database import BotDB


bot = telebot.TeleBot(token)
botdb = BotDB("database.db")
botdb.create_table_users()
botdb.create_table_records()


@bot.message_handler(commands=["start"])
def get_info(message):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞ (–ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ)"""
    if (not botdb.user_exists(message.from_user.id)):
        botdb.add_user(message.from_user.id, message.from_user.first_name, message.from_user.last_name, message.from_user.username)

    markup_inline = telebot.types.InlineKeyboardMarkup()
    item_yes = telebot.types.InlineKeyboardButton(text="–î–∞", callback_data="yes")
    item_no = telebot.types.InlineKeyboardButton(text="–ï—â–µ –Ω–µ—Ç", callback_data="no")
    markup_inline.add(item_yes, item_no)
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å, {message.chat.first_name}! \n"
        f"–ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –≤ –ú—è—Ç–∞ Cyber lounge! üçÉ \n"
        f"–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª—ã, –≤–∏–¥–µ—Ç—å –∞–Ω–æ–Ω—Å—ã –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏ –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å –µ–¥—É, –∞ —Ç–∞–∫ –∂–µ —É–∑–Ω–∞–≤–∞—Ç—å –æ –Ω–æ–≤–æ—Å—Ç—è—Ö –ú—è—Ç—ã) \n"
        f"–£–∂–µ –±—ã–≤–∞–ª–∏ —É –Ω–∞—Å –≤ –≥–æ—Å—Ç—è—Ö?", reply_markup=markup_inline)


@bot.callback_query_handler(func=lambda call: True)
def answer(call):
    if call.data == "yes":
        markup_reply = telebot.types.InlineKeyboardMarkup(row_width=1)
        hookah = telebot.types.InlineKeyboardButton(text="–ö–∞–ª—å—è–Ω", callback_data="hookah")
        food_drink = telebot.types.InlineKeyboardButton(text="–ï–¥–∞, –Ω–∞–ø–∏—Ç–∫–∏", callback_data="food_drink")
        events = telebot.types.InlineKeyboardButton(text="–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", callback_data="events")
        table_games = telebot.types.InlineKeyboardButton(text="–ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã", callback_data="table_games")
        service = telebot.types.InlineKeyboardButton(text="–°–µ—Ä–≤–∏—Å", callback_data="service")
        video_games = telebot.types.InlineKeyboardButton(text="–ö–æ–º–ø—å—é—Ç–µ—Ä—ã, Sony PC", callback_data="video_games")
        markup_reply.add(hookah, food_drink, events, table_games, service, video_games)

        bot.send_message(call.message.chat.id, f"–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç–µ –Ω–∞—Å! "
                                               f"–ß—Ç–æ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è —É –Ω–∞—Å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?", reply_markup=markup_reply)

    elif call.data == "no":
        bot.send_message(call.message.chat.id, f"üçÉ–ñ–¥–µ–º –≤–∞—Å –≤ –≥–æ—Å—Ç–∏, –Ω–∞—à –∞–¥—Ä–µ—Å:\n"
            f"–¢—é–º–µ–Ω—Å–∫–∏–π –¶–£–ú, –æ—Ç–¥–µ–ª—å–Ω—ã–π –≤—Ö–æ–¥ —Å –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è —É–ª–∏—Ü –ì–µ—Ä—Ü–µ–Ω–∞-–û—Ä–¥–∂–æ–Ω–∏–∫–∏–¥–∑–µ!\n\n"
            f"–°–ª–µ–≤–∞ –≤ –Ω–∏–∂–Ω–µ–º —É–≥–ª—É –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –ú–ï–ù–Æ, —Ç–∞–º –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª, –∑–∞–∫–∞–∑–∞—Ç—å –µ–¥—É, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥—Ä–∞—Ñ–∏–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º)\n\n"
            f"–î–æ –≤—Å—Ç—Ä–µ—á–∏)")

    elif call.data in choose:
        bot.send_message(call.message.chat.id, f"–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç! \n"
            f"–°–ª–µ–≤–∞ –≤ –Ω–∏–∂–Ω–µ–º —É–≥–ª—É –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –ú–ï–ù–Æ, —Ç–∞–º –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª, –∑–∞–∫–∞–∑–∞—Ç—å –µ–¥—É, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥—Ä–∞—Ñ–∏–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º)\n\n"
            f"–ë—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞)")

    elif call.data in events_soon.keys():
        markup_reply = telebot.types.InlineKeyboardMarkup(row_width=1)
        event_yes = telebot.types.InlineKeyboardButton(text="–î–∞", callback_data="event_yes")
        event_no = telebot.types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data="event_no")
        markup_reply.add(event_yes, event_no)
        bot.send_message(call.message.chat.id, events_soon[call.data])
        bot.send_message(call.message.chat.id, "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª?", reply_markup=markup_reply)
        global status, event
        status, event = "event", call.data

    elif call.data == "event_yes":
        markup_reply = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button_phone = telebot.types.KeyboardButton(text="üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
        markup_reply.add(button_phone)
        bot.send_message(call.message.chat.id, f"–û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –º—ã —Å–∫–æ—Ä–æ –≤–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–º –±—Ä–æ–Ω—å)\n"
                                               f"(—á–µ—Ä–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ª–∏–±–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏—Å—å —Ñ–æ—Ä–º–æ–π –Ω–∏–∂–µ)", reply_markup=markup_reply)

    elif call.data == "event_no":
        bot.send_message(call.message.chat.id, f"–ï—Å–ª–∏ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ú–µ–Ω—é –≤ –ª–µ–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É.\n"
        f"–í—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –≤–∞–º —É –Ω–∞—Å –≤ –≥–æ—Å—Ç—è—Ö)")


@bot.message_handler(commands=["event_schedule"])
def event_schedule(message):
    """–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –±–ª–∏–∂–∞–π—à–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ"""
    markup_reply = telebot.types.InlineKeyboardMarkup(row_width=1)
    event_1 = telebot.types.InlineKeyboardButton(text="–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ 1 (20.04.2022)", callback_data="event_1")
    event_2 = telebot.types.InlineKeyboardButton(text="–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ 2 (22.04.2022)", callback_data="event_2")
    event_3 = telebot.types.InlineKeyboardButton(text="–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ 3 (26.04.2022)", callback_data="event_3")
    markup_reply.add(event_1, event_2, event_3)
    bot.send_message(message.chat.id, "–ë–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", reply_markup=markup_reply)


@bot.message_handler(commands=["book_table"])
def book_table(message):
    markup_reply = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_phone = telebot.types.KeyboardButton(text="üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
    markup_reply.add(button_phone)
    bot.send_message(message.chat.id, f"–û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –º—ã —Å–∫–æ—Ä–æ –≤–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–º –±—Ä–æ–Ω—å)\n"
                                      f"(—á–µ—Ä–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ª–∏–±–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏—Å—å —Ñ–æ—Ä–º–æ–π –Ω–∏–∂–µ)", reply_markup=markup_reply)
    global status, event
    status, event = "book_table", None


@bot.message_handler(commands=["delivery"])
def delivery(message):
    """–ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ú—è—Ç–∞ Cyber lounge –≤ Delivery Club"""
    bot.send_message(message.chat.id, "[–ü–µ—Ä–µ–π—Ç–∏ –≤ Delivery Club](https://www.delivery-club.ru/)", parse_mode="Markdown")


@bot.message_handler(commands=["make_event"])
def make_event(message):
    markup_reply = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_phone = telebot.types.KeyboardButton(text="üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
    markup_reply.add(button_phone)
    bot.send_message(message.chat.id, f"–û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –∏ —É—Ç–æ—á–Ω–∏–º –≤—Å–µ –¥–µ—Ç–∞–ª–∏ \n"
                                      f"(—á–µ—Ä–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ª–∏–±–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏—Å—å —Ñ–æ—Ä–º–æ–π –Ω–∏–∂–µ)",
                     reply_markup=markup_reply)
    global status, event
    status, event = "make_event", None


@bot.message_handler(commands=["interior"])
def interior(message):
    """–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ú—è—Ç–∞ Cyber lounge –≤ VK"""
    bot.send_message(message.chat.id, "[–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ç–µ—Ä—å–µ—Ä](https://m.vk.com/albums-211038382)", parse_mode="Markdown")


@bot.message_handler(commands=["location"])
def location(message):
    """–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ú—è—Ç–∞ Cyber lounge –≤ 2gis"""
    bot.send_message(message.chat.id, "[–ì–¥–µ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è](https://2gis.ru/tyumen/firm/70000001050825242)", parse_mode="Markdown")


@bot.message_handler(commands=["review"])
def review(message):
    bot.send_message(message.chat.id, "–ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã —É—Å–ª—ã—à–∞—Ç—å –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ –æ –ª—é–±—ã—Ö —Å—Ç–æ—Ä–æ–Ω–∞—Ö –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã")
    global status, event
    status, event = "review", None


@bot.message_handler(commands=["other"])
def other(message):
    global status, event
    status, event = "other", None


@bot.message_handler(commands=["getchatid"])
def chatid(message):
    bot.send_message(message.chat.id, f"{message.chat.id}")


@bot.message_handler(content_types=["contact"])
def write_phone(message):
    global status
    botdb.add_data(message.from_user.id, datetime.now(), status, message.contact.phone_number, event)
    bot.send_message(message.chat.id, "–í–∞—à –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, —Å–ø–∞—Å–∏–±–æ!")
    bot.send_message(admin_chat_id, f"user {message.from_user.first_name}\n"
                                    f"status {status}\n"
                                    f"phone {message.contact.phone_number}\n"
                                    f"event {event}")
    status = None


@bot.message_handler(content_types=["text"])
def get_text(message):
    try:
        global status
        if "admin" in message.text:
            to_chat_id, mess_text = message.text[6:].split("#")
            bot.send_message(to_chat_id, mess_text)

        if status is None:
            bot.send_message(message.chat.id, "–ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π –ú–µ–Ω—é")

        else:
            text = message.text
            botdb.add_data(message.from_user.id, datetime.now(), status, text, event)
            bot.send_message(message.chat.id, "–í–∞—à –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, —Å–ø–∞—Å–∏–±–æ!")

            bot.send_message(admin_chat_id, f"user {message.from_user.first_name}\n"
                                            # f"user_id {message.from_user.username}\n"
                                            f"chat {message.chat.id}\n"
                                            f"status {status}\n"
                                            f"text {text}\n"
                                            f"event {event}")
            status = None

    except Exception:
        bot.send_message(message.chat.id, "–ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π –ú–µ–Ω—é")


if __name__ == "__main__":
    bot.polling(none_stop=True)
